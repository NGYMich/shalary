spring.sql.init.encoding=UTF-8
spring.sql.init.mode=always
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS SHALARY\\;SET SCHEMA SHALARY
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa

server.port=2111

############ Hibernate properties #################
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

############ Enable H2 Database browser console #################
spring.h2.console.enabled=true
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
#logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql=trace
spring.profiles.active=prod
java.runtime.version=11

# -------------------------------------------- SPRING OAUTH2

# Database configuration props
#spring.datasource.url=jdbc:mysql://localhost:3306/demo?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=secret
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
## Hibernate props
#spring.jpa.show-sql=true
# -------------------------------------------- LOGS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
logging.level.org.springframework=info
logging.level.root=info
logging.level.com=info
logging.level.org.hibernate.SQL=info
logging.level.org.hibernate.type=info

# ############################################ RESET DATABASE CARE #################
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=create
####################################################################################


# Social login provider props
spring.security.oauth2.client.registration.google.clientId=172883767999-v7qvdsu38ftrgp76sjj30h1qret9cg7q.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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

spring.security.oauth2.client.registration.facebook.clientId=1896506900721920
spring.security.oauth2.client.registration.facebook.clientSecret=281b3de5dee3fc919c0fa44d5daae351
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture

spring.security.oauth2.client.registration.github.clientId=<your-client-id>
spring.security.oauth2.client.registration.github.clientSecret=<your-client-secret>

spring.security.oauth2.client.registration.linkedin.clientId=<your-client-id>
spring.security.oauth2.client.registration.linkedin.clientSecret=<your-client-secret>
spring.security.oauth2.client.registration.linkedin.client-authentication-method=post
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.linkedin.scope=r_liteprofile, r_emailaddress
spring.security.oauth2.client.registration.linkedin.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.linkedin.client-name=Linkedin
spring.security.oauth2.client.registration.linkedin.provider=linkedin
spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
spring.security.oauth2.client.provider.linkedin.user-name-attribute=id
linkedin.email-address-uri=https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))

app.auth.tokenSecret=926D96C90030DD58429D2751AC1BDBBC
app.auth.tokenExpirationMsec=864000000
app.client.baseUrl=http://localhost:4200/
app.oauth2.authorizedRedirectUris=http://localhost:4200/oauth2/redirect
# For detailed logging during development
#logging.level.com=TRACE
#logging.level.org.hibernate.SQL=TRACE
#logging.level.org.hibernate.type=TRACE
spring.datasource.hikari.maxLifeTime=600000




